#!/bin/sh

if [ "$#" -ne 7 ] ; then
    echo "usage: `basename $0` <infile> <x1 x2 y1 y2 z1 z2> " > /dev/stderr
    echo "  use '--' to read from standard input" > /dev/stderr
    exit
fi

infile=$1
if [ $infile = "--" ] ; then
    infile="/dev/stdin"
elif [ ! -f $infile ] ; then
    echo "ERROR: file $infile does not exist" > /dev/stderr
    exit
fi

x1=$2
x2=$3
y1=$4
y2=$5
z1=$6
z2=$7


awk \
-v x1=$x1 \
-v x2=$x2 \
-v y1=$y1 \
-v y2=$y2 \
-v z1=$z1 \
-v z2=$z2 \
'BEGIN{ROW=6}
 {
    if (NR==1) print;
    else if (NR==2) print;
    else if (NR>=3&&NR<=5) {
	printf("   %.15f  %.15f  %.15f\n", $1*(x2-x1+1), $2*(y2-y1+1), $3*(z2-z1+1));
    } else if (NR==ROW) {
        if ( $1 !~ /^[0-9]*$/ ) {
          print $0
          ROW++; }
        else {
        for (i=1;i<=NF;i++) {
	    nat[i]=nattot+=$(i);
            printf(" %d",$(i)*(x2-x1+1)*(y2-y1+1)*(z2-z1+1));
        }
        printf("\n");
       }
    } else if (NR==ROW+1) {
        print $0;
	if (toupper(substr($1,1,1))=="D") {
	    for (iat=1;iat<=nattot;iat++) {
		getline;
		x=$1;  y=$2;  z=$3;
                for (i=x1;i<=x2;i++) {
                    for (j=y1;j<=y2;j++) {
                        for (k=z1;k<=z2;k++) {
		            printf(" %.15f %.15f %.15f\n",
                    	           (x+i)/(x2-x1+1), (y+j)/(y2-y1+1), (z+k)/(z2-z1+1));
                        }
                    }
                }
	    }
	} else {
	    print "ERROR: non-direct coordinates not supported yet";
	    exit;
	}
    }
}' $infile

